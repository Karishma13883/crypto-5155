#include <stdio.h>
#include <stdlib.h>

#define MATRIX_SIZE 2

void getKeyMatrix(char key[], int keyMatrix[MATRIX_SIZE][MATRIX_SIZE]) {
    int k = 0;
    for (int i = 0; i < MATRIX_SIZE; i++) {
        for (int j = 0; j < MATRIX_SIZE; j++) {
            keyMatrix[i][j] = key[k] % 65;
            k++;
        }
    }
}

void multiplyMatrices(int a[MATRIX_SIZE][MATRIX_SIZE], int b[MATRIX_SIZE][1], int result[MATRIX_SIZE][1]) {
    for (int i = 0; i < MATRIX_SIZE; i++) {
        result[i][0] = 0;
        for (int j = 0; j < MATRIX_SIZE; j++) {
            result[i][0] += a[i][j] * b[j][0];
        }
        result[i][0] %= 26;
    }
}

void hillCipher(char message[], char key[]) {
    int keyMatrix[MATRIX_SIZE][MATRIX_SIZE];
    getKeyMatrix(key, keyMatrix);

    int messageVector[MATRIX_SIZE][1];
    for (int i = 0; i < MATRIX_SIZE; i++) {
        messageVector[i][0] = message[i] % 65;
    }

    int cipherMatrix[MATRIX_SIZE][1];
    multiplyMatrices(keyMatrix, messageVector, cipherMatrix);

    printf("Ciphertext: ");
    for (int i = 0; i < MATRIX_SIZE; i++) {
        printf("%c", cipherMatrix[i][0] + 65);
    }
    printf("\n");
}

int main() {
    char message[] = "HI";  // Must be of length 2 for this example
    char key[] = "GYBNQKURP";  // Key for 2x2 Hill cipher

    hillCipher(message, key);

    return 0;
}
